---
# Use YAML anchors so we can prevent repeating ourselves
anchors:
  default_build_steps: &default_build_steps
    spec: '{% extends "spec.tpl" %}'
    unit: '{% extends "unit.tpl" %}'
    init: '{% extends "init.tpl" %}'
  default_context: &default_context
    static: &default_static_context
      user: prometheus
      group: prometheus
      package: '%{name}-%{version}.linux-amd64'
      tarball_has_subdirectory: true
      release: 1
    dynamic: &default_dynamic_context
      tarball: '{{URL}}/releases/download/v%{version}/{{package}}.tar.gz'
      sources:
        - '{{tarball}}'
        - autogen_%{name}.unit
        - '%{name}.default'
        - autogen_%{name}.init

# Per-package configuration
packages:
  node_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 1.1.2
        license: ASL 2.0
        URL: https://github.com/prometheus/node_exporter
        summary: Prometheus exporter for machine metrics, written in Go with pluggable
          metric collectors.
        description: |
          Prometheus exporter for hardware and OS metrics exposed by *NIX kernels,
          written in Go with pluggable metric collectors.
  mysqld_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 0.12.1
        license: ASL 2.0
        release: 2
        URL: https://github.com/prometheus/mysqld_exporter
        summary: Prometheus exporter for MySQL server metrics.
        description: |
          Prometheus exporter for MySQL server metrics. Supported MySQL versions: 5.5 and up.
          NOTE: Not all collection methods are supported on MySQL < 5.6
  redis_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      static:
        <<: *default_static_context
        version: 1.18.0
        license: MIT
        summary: Prometheus exporter for Redis server metrics.
        description: Prometheus Exporter for Redis Metrics. Supports Redis 2.x, 3.x,
          4.x, 5.x and 6.x
        package: '%{name}-v%{version}.linux-amd64'
        URL: https://github.com/oliver006/redis_exporter
      dynamic:
        <<: *default_dynamic_context
  haproxy_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 0.12.0
        license: ASL 2.0
        URL: https://github.com/prometheus/haproxy_exporter
        summary: This is a simple server that scrapes HAProxy stats and exports them
          via HTTP for Prometheus consumption.
        description: This is a simple server that scrapes HAProxy stats and exports
          them via HTTP for Prometheus consumption.
  kafka_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 1.3.0
        license: ASL 2.0
        release: 2
        URL: https://github.com/danielqsj/kafka_exporter
        summary: Kafka exporter for Prometheus.
        description: Kafka exporter for Prometheus.
  nginx_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 0.8.0
        license: ASL 2.0
        release: 2
        package: nginx-prometheus-exporter-%{version}-linux-amd64
        URL: https://github.com/nginxinc/nginx-prometheus-exporter
        tarball_has_subdirectory: false
        fix_name: nginx-prometheus-exporter
        summary: NGINX Prometheus Exporter for NGINX and NGINX Plus.
        description: NGINX Prometheus Exporter for NGINX and NGINX Plus.
  bind_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 0.4.0
        license: ASL 2.0
        URL: https://github.com/prometheus-community/bind_exporter
        summary: Prometheus exporter for Bind nameserver
        description: Export BIND(named/dns) v9+ service metrics to Prometheus.
  keepalived_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 0.5.0
        license: ASL 2.0
        user: root
        group: root
        release: 3
        URL: https://github.com/gen2brain/keepalived_exporter
        package: '%{name}-%{version}-amd64'
        summary: Prometheus exporter for Keepalived metrics
        description: Export Keepalived service metrics to Prometheus.
      dynamic:
        <<: *default_dynamic_context
        tarball: '{{URL}}/releases/download/%{version}/{{package}}.tar.gz'
  jolokia_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 1.3.1
        license: MIT
        release: 2
        URL: https://github.com/jaxxstorm/jolokia_exporter
        package: '%{name}_%{version}'
        summary: Prometheus exporter for jolokia metrics
        description: Export jolokia metrics to Prometheus.
        tarball_has_subdirectory: false
      dynamic:
        <<: *default_dynamic_context
        tarball: '{{URL}}/releases/download/%{version}/{{package}}_Linux_x86_64.tar.gz'
  pushgateway:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 1.4.0
        license: ASL 2.0
        URL: https://github.com/prometheus/pushgateway
        summary: Prometheus push acceptor for ephemeral and batch jobs.
        description: |
          The Prometheus Pushgateway exists to allow ephemeral and batch jobs to
          expose their metrics to Prometheus. Since these kinds of jobs may not
          exist long enough to be scraped, they can instead push their metrics to
          a Pushgateway. The Pushgateway then exposes these metrics to Prometheus.
  frr_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 0.2.12
        license: MIT
        user: frr
        group: frr
        URL: https://github.com/tynany/frr_exporter
        summary: Prometheus exporter for FRR metrics
        description: Export FRR service metrics to Prometheus.
  domain_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 1.10.0
        license: MIT
        URL: https://github.com/caarlos0/domain_exporter
        package: '%{name}_linux_amd64'
        tarball_has_subdirectory: false
        summary: Prometheus exporter for domain expiration time metrics
        description: Exports the expiration time of your domains as Prometheus metrics.
  mongodb_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 0.20.3
        license: ASL 2.0
        URL: https://github.com/percona/mongodb_exporter
        package: '%{name}-%{version}.linux-amd64'
        tarball_has_subdirectory: false
        summary: A Prometheus exporter for MongoDB including sharding, replication
          and storage engines
        description: A Prometheus exporter for MongoDB including sharding, replication
          and storage engines
  graphite_exporter:
    build_steps:
      <<: *default_build_steps
    context:
      <<: *default_context
      static:
        <<: *default_static_context
        version: 0.9.0
        license: ASL 2.0
        URL: https://github.com/prometheus/graphite_exporter
        summary: Server that accepts metrics via the Graphite protocol and exports
          them as Prometheus metrics.
        description: |
          An exporter for metrics exported in the Graphite plaintext protocol. It
          accepts data over both TCP and UDP, and transforms and exposes them for
          consumption by Prometheus.
